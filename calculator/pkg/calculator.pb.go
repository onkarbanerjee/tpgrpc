// Code generated by protoc-gen-go. DO NOT EDIT.
// source: calculator.proto

package calculator

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SumRequest struct {
	First                int32    `protobuf:"varint,1,opt,name=first,proto3" json:"first,omitempty"`
	Second               int32    `protobuf:"varint,2,opt,name=second,proto3" json:"second,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumRequest) Reset()         { *m = SumRequest{} }
func (m *SumRequest) String() string { return proto.CompactTextString(m) }
func (*SumRequest) ProtoMessage()    {}
func (*SumRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{0}
}

func (m *SumRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumRequest.Unmarshal(m, b)
}
func (m *SumRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumRequest.Marshal(b, m, deterministic)
}
func (m *SumRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumRequest.Merge(m, src)
}
func (m *SumRequest) XXX_Size() int {
	return xxx_messageInfo_SumRequest.Size(m)
}
func (m *SumRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SumRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SumRequest proto.InternalMessageInfo

func (m *SumRequest) GetFirst() int32 {
	if m != nil {
		return m.First
	}
	return 0
}

func (m *SumRequest) GetSecond() int32 {
	if m != nil {
		return m.Second
	}
	return 0
}

type SumResponse struct {
	Result               int32    `protobuf:"varint,3,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SumResponse) Reset()         { *m = SumResponse{} }
func (m *SumResponse) String() string { return proto.CompactTextString(m) }
func (*SumResponse) ProtoMessage()    {}
func (*SumResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{1}
}

func (m *SumResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SumResponse.Unmarshal(m, b)
}
func (m *SumResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SumResponse.Marshal(b, m, deterministic)
}
func (m *SumResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SumResponse.Merge(m, src)
}
func (m *SumResponse) XXX_Size() int {
	return xxx_messageInfo_SumResponse.Size(m)
}
func (m *SumResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SumResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SumResponse proto.InternalMessageInfo

func (m *SumResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type AvgRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgRequest) Reset()         { *m = AvgRequest{} }
func (m *AvgRequest) String() string { return proto.CompactTextString(m) }
func (*AvgRequest) ProtoMessage()    {}
func (*AvgRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{2}
}

func (m *AvgRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgRequest.Unmarshal(m, b)
}
func (m *AvgRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgRequest.Marshal(b, m, deterministic)
}
func (m *AvgRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgRequest.Merge(m, src)
}
func (m *AvgRequest) XXX_Size() int {
	return xxx_messageInfo_AvgRequest.Size(m)
}
func (m *AvgRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AvgRequest proto.InternalMessageInfo

func (m *AvgRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type AvgResponse struct {
	Result               float64  `protobuf:"fixed64,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AvgResponse) Reset()         { *m = AvgResponse{} }
func (m *AvgResponse) String() string { return proto.CompactTextString(m) }
func (*AvgResponse) ProtoMessage()    {}
func (*AvgResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{3}
}

func (m *AvgResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AvgResponse.Unmarshal(m, b)
}
func (m *AvgResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AvgResponse.Marshal(b, m, deterministic)
}
func (m *AvgResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AvgResponse.Merge(m, src)
}
func (m *AvgResponse) XXX_Size() int {
	return xxx_messageInfo_AvgResponse.Size(m)
}
func (m *AvgResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AvgResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AvgResponse proto.InternalMessageInfo

func (m *AvgResponse) GetResult() float64 {
	if m != nil {
		return m.Result
	}
	return 0
}

type DecomposeRequest struct {
	Prime                int32    `protobuf:"varint,1,opt,name=prime,proto3" json:"prime,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecomposeRequest) Reset()         { *m = DecomposeRequest{} }
func (m *DecomposeRequest) String() string { return proto.CompactTextString(m) }
func (*DecomposeRequest) ProtoMessage()    {}
func (*DecomposeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{4}
}

func (m *DecomposeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecomposeRequest.Unmarshal(m, b)
}
func (m *DecomposeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecomposeRequest.Marshal(b, m, deterministic)
}
func (m *DecomposeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecomposeRequest.Merge(m, src)
}
func (m *DecomposeRequest) XXX_Size() int {
	return xxx_messageInfo_DecomposeRequest.Size(m)
}
func (m *DecomposeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DecomposeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DecomposeRequest proto.InternalMessageInfo

func (m *DecomposeRequest) GetPrime() int32 {
	if m != nil {
		return m.Prime
	}
	return 0
}

type DecomposeResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DecomposeResponse) Reset()         { *m = DecomposeResponse{} }
func (m *DecomposeResponse) String() string { return proto.CompactTextString(m) }
func (*DecomposeResponse) ProtoMessage()    {}
func (*DecomposeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{5}
}

func (m *DecomposeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DecomposeResponse.Unmarshal(m, b)
}
func (m *DecomposeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DecomposeResponse.Marshal(b, m, deterministic)
}
func (m *DecomposeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DecomposeResponse.Merge(m, src)
}
func (m *DecomposeResponse) XXX_Size() int {
	return xxx_messageInfo_DecomposeResponse.Size(m)
}
func (m *DecomposeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DecomposeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DecomposeResponse proto.InternalMessageInfo

func (m *DecomposeResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

type MaxRequest struct {
	Number               int32    `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxRequest) Reset()         { *m = MaxRequest{} }
func (m *MaxRequest) String() string { return proto.CompactTextString(m) }
func (*MaxRequest) ProtoMessage()    {}
func (*MaxRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{6}
}

func (m *MaxRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxRequest.Unmarshal(m, b)
}
func (m *MaxRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxRequest.Marshal(b, m, deterministic)
}
func (m *MaxRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxRequest.Merge(m, src)
}
func (m *MaxRequest) XXX_Size() int {
	return xxx_messageInfo_MaxRequest.Size(m)
}
func (m *MaxRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MaxRequest proto.InternalMessageInfo

func (m *MaxRequest) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

type MaxResponse struct {
	Result               int32    `protobuf:"varint,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MaxResponse) Reset()         { *m = MaxResponse{} }
func (m *MaxResponse) String() string { return proto.CompactTextString(m) }
func (*MaxResponse) ProtoMessage()    {}
func (*MaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c686ea360062a8cf, []int{7}
}

func (m *MaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaxResponse.Unmarshal(m, b)
}
func (m *MaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaxResponse.Marshal(b, m, deterministic)
}
func (m *MaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaxResponse.Merge(m, src)
}
func (m *MaxResponse) XXX_Size() int {
	return xxx_messageInfo_MaxResponse.Size(m)
}
func (m *MaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MaxResponse proto.InternalMessageInfo

func (m *MaxResponse) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*SumRequest)(nil), "calculator.SumRequest")
	proto.RegisterType((*SumResponse)(nil), "calculator.SumResponse")
	proto.RegisterType((*AvgRequest)(nil), "calculator.AvgRequest")
	proto.RegisterType((*AvgResponse)(nil), "calculator.AvgResponse")
	proto.RegisterType((*DecomposeRequest)(nil), "calculator.DecomposeRequest")
	proto.RegisterType((*DecomposeResponse)(nil), "calculator.DecomposeResponse")
	proto.RegisterType((*MaxRequest)(nil), "calculator.MaxRequest")
	proto.RegisterType((*MaxResponse)(nil), "calculator.MaxResponse")
}

func init() { proto.RegisterFile("calculator.proto", fileDescriptor_c686ea360062a8cf) }

var fileDescriptor_c686ea360062a8cf = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0x4d, 0x4b, 0xc3, 0x40,
	0x10, 0xed, 0xb6, 0x34, 0xc5, 0xf1, 0xd2, 0x2e, 0x12, 0x43, 0x51, 0x90, 0x45, 0x21, 0x20, 0x94,
	0xa2, 0x17, 0xf1, 0x20, 0x16, 0x3d, 0xda, 0x4b, 0xf3, 0x0b, 0xd2, 0x38, 0x96, 0x40, 0x36, 0x1b,
	0x77, 0xb3, 0xa1, 0x7f, 0xc6, 0xff, 0x2a, 0xd9, 0x7c, 0x6d, 0x5a, 0x15, 0x8f, 0x6f, 0xf6, 0xcd,
	0x9b, 0x37, 0x6f, 0x16, 0xa6, 0x51, 0x98, 0x44, 0x3a, 0x09, 0x73, 0x21, 0x17, 0x99, 0x14, 0xb9,
	0xa0, 0xd0, 0x55, 0xd8, 0x23, 0x40, 0xa0, 0xf9, 0x06, 0x3f, 0x35, 0xaa, 0x9c, 0x9e, 0xc1, 0xf8,
	0x23, 0x96, 0x2a, 0xf7, 0xc8, 0x15, 0xf1, 0xc7, 0x9b, 0x0a, 0x50, 0x17, 0x1c, 0x85, 0x91, 0x48,
	0xdf, 0xbd, 0xa1, 0x29, 0xd7, 0x88, 0xdd, 0xc0, 0xa9, 0xe9, 0x55, 0x99, 0x48, 0x15, 0x96, 0x34,
	0x89, 0x4a, 0x27, 0xb9, 0x37, 0xaa, 0x68, 0x15, 0x62, 0xd7, 0x00, 0xab, 0x62, 0xd7, 0x8c, 0x70,
	0xc1, 0x49, 0x35, 0xdf, 0xa2, 0xac, 0x67, 0xd4, 0xa8, 0x14, 0x33, 0xac, 0x23, 0xb1, 0x92, 0x46,
	0x5a, 0x31, 0x1f, 0xa6, 0xaf, 0x18, 0x09, 0x9e, 0x09, 0x85, 0x96, 0xeb, 0x4c, 0xc6, 0x1c, 0x1b,
	0xd7, 0x06, 0xb0, 0x5b, 0x98, 0x59, 0xcc, 0x1f, 0x65, 0x7b, 0x1e, 0xd7, 0xe1, 0xfe, 0x1f, 0x1e,
	0x0d, 0xeb, 0x6f, 0xb1, 0xbb, 0xaf, 0x21, 0xcc, 0x5e, 0xda, 0x88, 0x03, 0x94, 0x45, 0x1c, 0x21,
	0x7d, 0x80, 0x51, 0xa0, 0x39, 0x75, 0x17, 0xd6, 0x3d, 0xba, 0xe8, 0xe7, 0xe7, 0x47, 0xf5, 0x6a,
	0x0a, 0x1b, 0xd0, 0x37, 0x38, 0x69, 0x37, 0xa1, 0x17, 0x36, 0xef, 0x30, 0x8a, 0xf9, 0xe5, 0x2f,
	0xaf, 0x8d, 0xd6, 0x92, 0xd0, 0x27, 0x98, 0xac, 0x0a, 0x94, 0xe1, 0x0e, 0xfb, 0x5e, 0xba, 0x1b,
	0xf5, 0xbd, 0x58, 0x57, 0x61, 0x03, 0x9f, 0xd0, 0x67, 0x98, 0xac, 0xc3, 0x7d, 0xcc, 0x0f, 0x77,
	0xe9, 0xf2, 0xeb, 0xf7, 0x5b, 0x89, 0x95, 0xfd, 0x4b, 0xb2, 0x75, 0xcc, 0x37, 0xbc, 0xff, 0x0e,
	0x00, 0x00, 0xff, 0xff, 0xdb, 0xda, 0x9a, 0x0f, 0x9a, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CalculatorServiceClient is the client API for CalculatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CalculatorServiceClient interface {
	Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error)
	Decompose(ctx context.Context, in *DecomposeRequest, opts ...grpc.CallOption) (CalculatorService_DecomposeClient, error)
	Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error)
	Maximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_MaximumClient, error)
}

type calculatorServiceClient struct {
	cc *grpc.ClientConn
}

func NewCalculatorServiceClient(cc *grpc.ClientConn) CalculatorServiceClient {
	return &calculatorServiceClient{cc}
}

func (c *calculatorServiceClient) Sum(ctx context.Context, in *SumRequest, opts ...grpc.CallOption) (*SumResponse, error) {
	out := new(SumResponse)
	err := c.cc.Invoke(ctx, "/calculator.CalculatorService/Sum", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *calculatorServiceClient) Decompose(ctx context.Context, in *DecomposeRequest, opts ...grpc.CallOption) (CalculatorService_DecomposeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[0], "/calculator.CalculatorService/Decompose", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceDecomposeClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CalculatorService_DecomposeClient interface {
	Recv() (*DecomposeResponse, error)
	grpc.ClientStream
}

type calculatorServiceDecomposeClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceDecomposeClient) Recv() (*DecomposeResponse, error) {
	m := new(DecomposeResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Average(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_AverageClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[1], "/calculator.CalculatorService/Average", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceAverageClient{stream}
	return x, nil
}

type CalculatorService_AverageClient interface {
	Send(*AvgRequest) error
	CloseAndRecv() (*AvgResponse, error)
	grpc.ClientStream
}

type calculatorServiceAverageClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceAverageClient) Send(m *AvgRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceAverageClient) CloseAndRecv() (*AvgResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AvgResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *calculatorServiceClient) Maximum(ctx context.Context, opts ...grpc.CallOption) (CalculatorService_MaximumClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CalculatorService_serviceDesc.Streams[2], "/calculator.CalculatorService/Maximum", opts...)
	if err != nil {
		return nil, err
	}
	x := &calculatorServiceMaximumClient{stream}
	return x, nil
}

type CalculatorService_MaximumClient interface {
	Send(*MaxRequest) error
	Recv() (*MaxResponse, error)
	grpc.ClientStream
}

type calculatorServiceMaximumClient struct {
	grpc.ClientStream
}

func (x *calculatorServiceMaximumClient) Send(m *MaxRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *calculatorServiceMaximumClient) Recv() (*MaxResponse, error) {
	m := new(MaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CalculatorServiceServer is the server API for CalculatorService service.
type CalculatorServiceServer interface {
	Sum(context.Context, *SumRequest) (*SumResponse, error)
	Decompose(*DecomposeRequest, CalculatorService_DecomposeServer) error
	Average(CalculatorService_AverageServer) error
	Maximum(CalculatorService_MaximumServer) error
}

// UnimplementedCalculatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCalculatorServiceServer struct {
}

func (*UnimplementedCalculatorServiceServer) Sum(ctx context.Context, req *SumRequest) (*SumResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sum not implemented")
}
func (*UnimplementedCalculatorServiceServer) Decompose(req *DecomposeRequest, srv CalculatorService_DecomposeServer) error {
	return status.Errorf(codes.Unimplemented, "method Decompose not implemented")
}
func (*UnimplementedCalculatorServiceServer) Average(srv CalculatorService_AverageServer) error {
	return status.Errorf(codes.Unimplemented, "method Average not implemented")
}
func (*UnimplementedCalculatorServiceServer) Maximum(srv CalculatorService_MaximumServer) error {
	return status.Errorf(codes.Unimplemented, "method Maximum not implemented")
}

func RegisterCalculatorServiceServer(s *grpc.Server, srv CalculatorServiceServer) {
	s.RegisterService(&_CalculatorService_serviceDesc, srv)
}

func _CalculatorService_Sum_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SumRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CalculatorServiceServer).Sum(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/calculator.CalculatorService/Sum",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CalculatorServiceServer).Sum(ctx, req.(*SumRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CalculatorService_Decompose_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DecomposeRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CalculatorServiceServer).Decompose(m, &calculatorServiceDecomposeServer{stream})
}

type CalculatorService_DecomposeServer interface {
	Send(*DecomposeResponse) error
	grpc.ServerStream
}

type calculatorServiceDecomposeServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceDecomposeServer) Send(m *DecomposeResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CalculatorService_Average_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Average(&calculatorServiceAverageServer{stream})
}

type CalculatorService_AverageServer interface {
	SendAndClose(*AvgResponse) error
	Recv() (*AvgRequest, error)
	grpc.ServerStream
}

type calculatorServiceAverageServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceAverageServer) SendAndClose(m *AvgResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceAverageServer) Recv() (*AvgRequest, error) {
	m := new(AvgRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CalculatorService_Maximum_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CalculatorServiceServer).Maximum(&calculatorServiceMaximumServer{stream})
}

type CalculatorService_MaximumServer interface {
	Send(*MaxResponse) error
	Recv() (*MaxRequest, error)
	grpc.ServerStream
}

type calculatorServiceMaximumServer struct {
	grpc.ServerStream
}

func (x *calculatorServiceMaximumServer) Send(m *MaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *calculatorServiceMaximumServer) Recv() (*MaxRequest, error) {
	m := new(MaxRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CalculatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "calculator.CalculatorService",
	HandlerType: (*CalculatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Sum",
			Handler:    _CalculatorService_Sum_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Decompose",
			Handler:       _CalculatorService_Decompose_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "Average",
			Handler:       _CalculatorService_Average_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "Maximum",
			Handler:       _CalculatorService_Maximum_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "calculator.proto",
}
